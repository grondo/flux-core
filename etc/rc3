#!/bin/bash

RANK=$(flux getattr rank)
exit_rc=0

# Usage: modrm {all|<rank>} modname
modrm() {
    local where=$1; shift
    if test "$where" = "all" || test $where -eq $RANK; then
        flux module remove -f $* || exit_rc=1
    fi
}

core_dir=$(cd ${0%/*} && pwd -P)
all_dirs=$core_dir${FLUX_RC_EXTRA:+":$FLUX_RC_EXTRA"}
IFS=:
shopt -s nullglob
for rcdir in $all_dirs; do
    for rcfile in $rcdir/rc3.d/*; do
        echo running $rcfile
        $rcfile || exit_rc=1
    done
done
shopt -u nullglob

modrm 0 heartbeat
modrm 0 sched-simple
modrm all resource
modrm 0 job-archive
modrm 0 job-exec
modrm 0 job-list
modrm all job-info
modrm 0 job-manager
modrm all job-ingest
modrm all derp

modrm 0 cron
modrm all barrier

if test $RANK -eq 0; then
    flux startlog --post-finish-event || exit_rc=1
fi

modrm all kvs-watch
modrm all kvs

flux content flush || exit_rc=1

if test $RANK -eq 0; then
    backingmod=$(flux getattr content.backing-module 2>/dev/null)
    backingmod=${backingmod:-content-sqlite}
    dumpfile=$(flux getattr content.dump 2>/dev/null)
    if test $exit_rc -eq 0 -a -n "${dumpfile}"; then
        if test "${dumpfile}" = "auto"; then
            statedir=$(flux getattr statedir 2>/dev/null)
            mkdir -p "${statedir:-.}/dump"
            dumpfile="${statedir:-.}/dump/$(date +%Y%m%d_%H%M%S).tgz"
            dumplink="${statedir:-.}/dump/RESTORE"
        fi
        echo "dumping content to ${dumpfile}"
        if flux dump --quiet --checkpoint ${dumpfile}; then
            test -n "$dumplink" && ln -s $(basename ${dumpfile}) ${dumplink}
        else
            exit_rc=1
        fi
    fi
    flux module remove ${backingmod} || exit_rc=1
fi

exit $exit_rc
